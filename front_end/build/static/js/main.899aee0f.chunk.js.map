{"version":3,"sources":["components/FileHandler.js","pages/MainPage.js","pages/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","apiPaths","FileHandler","props","useState","selectedFile","setSelectedFile","fileId","setFileId","status","setStatus","className","alt","src","URL","createObjectURL","type","name","id","accept","onChange","event","target","files","htmlFor","xmlns","width","height","viewBox","d","onClick","fd","FormData","append","axios","post","then","res","data","catch","err","console","log","get","processed","permaSaved","classification","MainPage","React","Component","PageNotFound","to","paths","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAKMA,EAAU,wBAEVC,EACaD,EAAU,qBADvBC,EAEYD,EAAU,qBA+FbE,MA3Ff,SAAqBC,GAGjB,MAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KAgCA,OACI,qCAEqB,MAAhBL,GACG,qBAAKM,UAAU,aAAaC,IAAI,GAAGC,IAAKC,IAAIC,gBAAgBV,KAIhE,uBAAOW,KAAK,OAAOC,KAAMd,EAAMc,KAAMC,GAAG,aAAaC,OAAO,UAAUC,SAAU,SAAAC,GAExEA,EAAMC,OAAOC,OAASF,EAAMC,OAAOC,MAAM,IAAIjB,EAAgBe,EAAMC,OAAOC,MAAM,OAGxF,qBAAKZ,UAAU,QAAf,SACI,wBAAOa,QAAQ,aAAab,UAAU,eAAtC,UACI,iCACI,qBAAKc,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SACI,sBAAMC,EAAE,mQAHpB,wBAaJ,wBAAQlB,UAAU,SAASmB,QAxDd,WAGjB,GAAoB,MAAhBzB,EAAsB,CAEtBK,EAAU,MACV,IAAMqB,EAAK,IAAIC,SACfD,EAAGE,OAAO9B,EAAMc,KAAMZ,GACtB6B,IAAMC,KAAKlC,EAAyBE,EAAMc,KAAMc,GAC3CK,MAAK,SAAAC,GAEF7B,EAAU6B,EAAIC,KAAKpB,OAEtBqB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QA0CpB,0BAEW,MAAVjC,GACG,kEAAqCA,EAArC,OAIJ,wBAAQI,UAAU,YAAYmB,QA5ClB,WAEF,MAAVvB,GACA2B,IAAMS,IAAI1C,EAAwBM,GAC7B6B,MAAK,SAAAC,GACF3B,EAAU2B,EAAIC,UAuCtB,0BACA,sBAAK3B,UAAU,WAAf,UAEe,MAAVF,GACG,qCACI,4CAAeA,EAAOmC,UAAY,MAAQ,QAC1C,qDAAwBnC,EAAOoC,WAAa,MAAQ,WAGjD,MAAVpC,GAA2C,MAAzBA,EAAOqC,gBACtB,6CAAgBrC,EAAOqC,yBC/E5BC,E,4JAbX,WACI,OACI,qBAAKpC,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,UAAd,sBACA,cAAC,EAAD,CAAaM,KAAK,uB,GANf+B,IAAMC,WCWdC,E,4JAVX,WACI,OACI,gCACI,qDACA,cAAC,IAAD,CAAMC,GAAG,IAAT,iD,GALWH,IAAMC,WCS3BG,EACQ,IADRA,EAEY,OAgBHC,MAZf,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMH,EAAgBI,UAAWT,IAC9C,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAMH,EAAoBI,UAAWN,IAClD,cAAC,IAAD,CAAUC,GAAIC,UCZfK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.899aee0f.chunk.js","sourcesContent":["import {useState} from 'react';\nimport axios from 'axios';\n\n// Base url dell'api:\n// NOTA: Prima di andare in production bisogna salvare queste stringhe in env variables\nconst baseUrl = \"http://localhost:5000\"\n// Dizionario per i path di base dell'api\nconst apiPaths = {\n    baseUploadUrl: baseUrl + \"/api/upload/input=\",\n    baseQueryUrl: baseUrl + \"/api/get_state/id=\"\n}\n\n\nfunction FileHandler(props) {\n    // Hooks per lo stato\n    // File selezionato\n    const [selectedFile, setSelectedFile] = useState(null);\n    // id del file nel database\n    const [fileId, setFileId] = useState(null);\n    // stato del file nel database\n    const [status, setStatus] = useState(null);\n\n\n    const handleSubmit = () => {\n        // Gestione Click su tasto upload\n        // Invio l'immagine all'api\n        if (selectedFile != null) {\n            // Rimuovo lo stato precedente\n            setStatus(null);\n            const fd = new FormData();\n            fd.append(props.name, selectedFile);\n            axios.post(apiPaths.baseUploadUrl + props.name, fd)\n                .then(res => {\n                    // Aggiorno lo stato inserendo l'id ottenuto come risposta\n                    setFileId(res.data.id);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }\n\n    const queryStatus = () => {\n        // Gestione per richiesta dello stato di processamento\n        if (fileId != null) {\n            axios.get(apiPaths.baseQueryUrl + fileId)\n                .then(res => {\n                    setStatus(res.data);\n                })\n        }\n    }\n\n    return (\n        <>\n            {/* Renderizzazione condizionale dell'immagine */}\n            {selectedFile != null && (\n                <img className=\"img-holder\" alt=\"\" src={URL.createObjectURL(selectedFile)} />\n            )}\n\n            {/* Input */}\n            <input type=\"file\" name={props.name} id=\"input-file\" accept=\"image/*\" onChange={event => {\n                // Aggiorno il file selezionato\n                if (event.target.files && event.target.files[0]) setSelectedFile(event.target.files[0]);\n            }} />\n            {/* Label per immagine al posto del tasto */}\n            <div className=\"label\">\n                <label htmlFor=\"input-file\" className=\"image-upload\">\n                    <figure>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\">\n                            <path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"></path>\n                        </svg>\n                    </figure>\n                    {/* Questo Ã¨ un alias per il bottone scegli. Scelgo la foto tramite l'immagine */}\n                    {/*<i className=\"material-icons\">add_photo_alternate</i> */}\n                    Choose your file\n                </label>\n            </div>\n\n            {/* Tasto per upload */}\n            <button className=\"submit\" onClick={handleSubmit}>Upload Image</button>\n            {/* Renderizzazione condizionale dell'id dell'immagine */}\n            {fileId != null && (\n                <p>The file has been saved with id: {fileId} </p>\n            )}\n\n            {/* Tasto per query dello stato */}\n            <button className=\"getStatus\" onClick={queryStatus}>Query status</button>\n            <div className=\"response\">\n                {/* Renderizzazione condizionale dello stato */}\n                {status != null && (\n                    <>\n                        <p>Processed: {status.processed ? \"Yes\" : \"No\"}</p>\n                        <p>Permanently stored: {status.permaSaved ? \"Yes\" : \"No\"}</p>\n                    </>\n                )}\n                {status != null && status.classification != null && (\n                    <p>Predizione: {status.classification}</p>\n                )}\n            </div>\n        </>\n    );\n}\n\n\nexport default FileHandler;\n","import React from 'react';\nimport FileHandler from '../components/FileHandler'\n\nclass MainPage extends React.Component {\n    render() {\n        return (\n            <div className=\"page\">\n                <div className=\"container\">\n                    <h1 className=\"heading\">EikonApp</h1>\n                    <FileHandler name=\"inputFile\" />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default MainPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nclass PageNotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>404 Page not Found!</h1>\n                <Link to=\"/\">Torna alla pagina principale</Link>\n            </div>\n        );\n    }\n}\n\nexport default PageNotFound;\n","import './Stile.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\n\nimport MainPage from './pages/MainPage';\nimport PageNotFound from './pages/PageNotFound';\n\nconst paths = {\n    MainPage: \"/\",\n    PageNotFound: \"/404\"\n}\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={paths.MainPage} component={MainPage} />\n                <Route exact path={paths.PageNotFound} component={PageNotFound} />\n                <Redirect to={paths.PageNotFound} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}